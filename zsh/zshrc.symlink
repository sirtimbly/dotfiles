

# zmodload zsh/zprof

eval "$(starship init zsh)"

. "$HOME/.atuin/bin/env"
eval "$(atuin init zsh)"
eval "$(gh copilot alias -- zsh)"

eval "$(zoxide init --cmd=cd zsh)"

# Path to your oh-my-zsh installation.
zstyle ':omz:update' frequency 30
export ZSH=$HOME/.oh-my-zsh
export DOTFILES="$HOME/.dotfiles"


# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

export PATH="$PATH:$DOTFILES/bin"

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/**/*.zsh)
# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# # initialize autocomplete here, otherwise functions won't be loaded
# autoload -U compinit
# compinit
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

# bun completions
# [ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# bun
# export BUN_INSTALL="$HOME/.bun"
# export PATH="$BUN_INSTALL/bin:$PATH"

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end



export EDITOR="hx"
export NOTES_DIR="$HOME/Projects/notes"
export HIMALAYA_CONFIG="$HOME/.config/himalaya/config.toml"
export BAT_THEME="Monokai Extended"
export FLAVOR="mocha"
export XDG_CONFIG_HOME="$HOME/.config"
export NNN_USE_EDITOR=1
export NNN_BMS="h:~;d:~/Downloads;c:~/.config;f:~/granular/fabric3"
export PROJECTS="$HOME/Projects"
export HOMEBREW_BUNDLE_FILE="$HOME/.dotfiles/homebrew/Brewfile"
export GODSPEED_SYNC_DIR="$NOTES_DIR/godspeed"
export GOMODCACHE="$HOME/go/pkg/mod"
export GOPATH="$HOME/go"
# Created by `pipx` on 2024-10-28 03:34:22
export PATH="$PATH:/Users/tim/.local/bin"

export NVIM_LISTEN_ADDRESS=/tmp/nvim-server

export RIPGREP_CONFIG_PATH="$HOME/.dotfiles/config/ripgrep_config"


# ------------FZF--------------
# eval "$(fzf --zsh)"
export FZF_DEFAULT_OPTS="--preview '
  if [ -d {} ]; then
    lsd --tree --color=always {} | head -100
  else
    bat --style=numbers --color=always --line-range=:500 {}
  fi
' --preview-window=right:58"

# ------------- yazi ----------
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	IFS= read -r -d '' cwd < "$tmp"
	[ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
	rm -f -- "$tmp"
}

eval "$(mise activate zsh)"

# Always open VSCode with mise paths
# ----------------------------------

code() {
    local args=("$@")
    local workdir=""
    
    for arg in "${args[@]}"; do
        if [[ "$arg" != -* ]]; then
            workdir="$arg"
            break
        fi
    done

    if [[ -n "$workdir" ]]; then
        mise exec --cd "$workdir" -- code "$@"
    else
        command code "$@"
    fi
}
